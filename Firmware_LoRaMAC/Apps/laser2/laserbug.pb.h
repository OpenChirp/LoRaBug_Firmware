/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.8 at Tue Jul 11 13:07:10 2017. */

#ifndef PB_LASERBUG_PB_H_INCLUDED
#define PB_LASERBUG_PB_H_INCLUDED
#include "pb.h"

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _LaserMessage {
    bool has_distance;
    uint32_t distance;
    bool has_duty;
    uint32_t duty;
    bool has_temperature;
    float temperature;
/* @@protoc_insertion_point(struct:LaserMessage) */
} LaserMessage;

/* Default values for struct fields */

/* Initializer values for message structs */
#define LaserMessage_init_default                {false, 0, false, 0, false, 0}
#define LaserMessage_init_zero                   {false, 0, false, 0, false, 0}

/* Field tags (for use in manual encoding/decoding) */
#define LaserMessage_distance_tag                1
#define LaserMessage_duty_tag                    2
#define LaserMessage_temperature_tag             3

/* Struct field encoding specification for nanopb */
extern const pb_field_t LaserMessage_fields[4];

/* Maximum encoded size of messages (where known) */
#define LaserMessage_size                        17

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define LASERBUG_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
